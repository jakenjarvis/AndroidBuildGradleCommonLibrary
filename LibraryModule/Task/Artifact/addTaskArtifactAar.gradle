// addTaskArtifactAar.gradle
def thisname = "addTaskArtifactAar"
println "Loading ${thisname}"

// http://www.gradle.org/docs/current/dsl/org.gradle.api.tasks.bundling.Zip.html
//task artifactAar(type: Zip) {
//    extension = 'aar'
//    destinationDir = file('build/libs')
//}


configurations {
    ArtifactAar
}

def androidLibraryProject = project.plugins.hasPlugin('android-library')

def artifactType = "Aar"
def artifactTypeName = "AAR"

if(androidLibraryProject) {
    def variants = android.libraryVariants
    def variantsTypeName = "Android Library"

    println ":${project.name}:${thisname} Detected a ${variantsTypeName} project."
    variants.all { variant ->
        def name = variant.name.capitalize()
        def taskname = "packageArtifact${name}${artifactType}"
        //def copyTaskname = "copyArtifact${name}${artifactType}"

        def task = project.tasks.create(taskname, Zip)
        task.extension = 'aar'
        //task.archiveName = new File(variant.outputFile.getCanonicalFile().getName())
        task.archiveName = commonlibrary.generateArchiveName(task, variant)
        //task.destinationDir = new File(variant.outputFile.getCanonicalFile().getParent())
        task.destinationDir = file('build/libs/')

        // https://groups.google.com/forum/#!topic/adt-dev/4_-5NvxuFB0
        variant.outputFile = task.archivePath

        //def copytask = project.tasks.create(copyTaskname, Copy)
        //copytask.from(variant.outputFile)
        //copytask.into(file('build/libs/'))
        //copytask.rename { task.archiveName }

        task.dependsOn variant.assemble//, copytask
        variant.assemble.finalizedBy task

        //artifacts.add('archives', task);
        artifacts.add('ArtifactAar', task);
        println ":${project.name}:${thisname} Register ${artifactTypeName} Artifact. [${taskname}]"
    }
}
