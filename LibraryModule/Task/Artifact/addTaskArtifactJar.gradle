// addTaskArtifactJar.gradle
def thisname = "addTaskArtifactJar"
println "Loading ${thisname}"

// http://www.gradle.org/docs/current/dsl/org.gradle.api.tasks.bundling.Jar.html
// http://stackoverflow.com/questions/19034466/how-to-create-a-jar-with-gradle-without-publicly-revealing-source-code
// http://stackoverflow.com/questions/16763090/how-to-export-library-to-jar-in-android-studio

// http://stackoverflow.com/questions/21434554/copying-apk-file-in-android-gradle-project
// http://stackoverflow.com/questions/19307341/android-library-gradle-release-jar

configurations {
    ArtifactJar
}

def javaProject = project.plugins.hasPlugin('java')
def androidApplicationProject = project.plugins.hasPlugin('android')
def androidLibraryProject = project.plugins.hasPlugin('android-library')

def artifactType = "Jar"
def artifactTypeName = "Java"
def artifactClassifier = 'jar'

if(androidApplicationProject || androidLibraryProject) {
    def variants
    def variantsTypeName
    if(androidApplicationProject) {
        variants = android.applicationVariants
        variantsTypeName = "Android Application"
    }
    if(androidLibraryProject) {
        variants = android.libraryVariants
        variantsTypeName = "Android Library"
    }

    println ":${project.name}:${thisname} Detected a ${variantsTypeName} project."
    variants.all { variant ->
        def name = variant.name.capitalize()
        def taskname = "packageArtifact${name}${artifactType}"

        def task = project.tasks.create(taskname, Jar)
        task.dependsOn variant.javaCompile
        task.classifier = artifactClassifier
        task.from variant.javaCompile.destinationDir
        task.archiveName = commonlibrary.generateArchiveName(task, variant)
        task.destinationDir = file("build/outputs/${task.classifier}/")

        task.dependsOn variant.assemble
        variant.assemble.finalizedBy task

        //artifacts.add('archives', task);
        artifacts.add('ArtifactJar', task);
        println ":${project.name}:${thisname} Register ${artifactTypeName} Artifact. [${taskname}]"
    }
}

if(javaProject) {
    println ":${project.name}:${thisname} Detected a Java project."
    def taskname = "packageArtifact${artifactType}"

    def task = project.tasks.create(taskname, Jar)
    task.dependsOn project.compileJava
    task.from project.compileJava.destinationDir
    task.archiveName = commonlibrary.generateArchiveName(task, null)
    //task.destinationDir = file('build/libs/')
    task.destinationDir = file("build/outputs/${task.classifier}/")

    task.dependsOn project.jar
    project.jar.finalizedBy task

    //artifacts.add('archives', task);
    artifacts.add('ArtifactJar', task);

    println ":${project.name}:${thisname} Register ${artifactTypeName} Artifact. [${taskname}]"
}
